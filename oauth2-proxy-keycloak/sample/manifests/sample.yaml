#@ load("@ytt:data", "data")
#@ load("@ytt:base64", "base64")
#@ load("@ytt:yaml", "yaml")

#@ def labels():
app: sample
heritage: kapp
#@ end

#@ def namespace():
#@ return "default"
#@ end

apiVersion: v1
kind: ServiceAccount
metadata:
  labels: #@ labels()
  name: sample-sa
  namespace: #@ namespace()
---
apiVersion: v1
kind: Secret
metadata:
  labels: #@ labels()
  name: sample-proxy-secrets
  namespace: #@ namespace()
data:
  OAUTH2_PROXY_CLIENT_ID: #@ base64.encode(data.values.proxy.env.OAUTH2_PROXY_CLIENT_ID)
  OAUTH2_PROXY_CLIENT_SECRET: #@ base64.encode(data.values.proxy.env.OAUTH2_PROXY_CLIENT_SECRET)
  OAUTH2_PROXY_COOKIE_SECRET: #@ base64.encode(data.values.proxy.env.OAUTH2_PROXY_COOKIE_SECRET)
  OAUTH2_PROXY_SCOPE: #@ base64.encode(data.values.proxy.env.OAUTH2_PROXY_SCOPE)
---
apiVersion: v1
kind: Service
metadata:
  labels: #@ labels()
  name: sample
  namespace: #@ namespace()
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector: #@ labels()
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels: #@ labels()
  name: sample
  namespace: #@ namespace()
spec:
  replicas: 1
  selector:
    matchLabels: #@ labels()
  template:
    metadata:
      labels: #@ labels()
    spec:
      serviceAccountName: sample-sa
      containers:
        - name: sample
          image: sample-image
          imagePullPolicy: Always
          securityContext:
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            runAsUser: 1000
            runAsGroup: 100
        - name: oauth2-proxy
          image: oauth2-proxy
          imagePullPolicy: Always
          args:
            - --http-address=0.0.0.0:4180
            - --ssl-insecure-skip-verify
            - --email-domain=*
            - --silence-ping-logging
            - --redirect-url=http://sample.192.168.11.240.nip.io/oauth2/callback
            - --provider=keycloak
            - --upstream=http://localhost:8080/
            - --cookie-secure=false
            - --skip-auth-strip-headers=false
            - --pass-access-token=true
            #! ### Can allow multiple groups
            - --allowed-group=/sample
            - --allowed-group=/othergroup
            - --skip-provider-button=true
            - --login-url=http://keycloak.192.168.11.240.nip.io/auth/realms/demo/protocol/openid-connect/auth
            - --redeem-url=http://keycloak.192.168.11.240.nip.io/auth/realms/demo/protocol/openid-connect/token
            - --profile-url=http://keycloak.192.168.11.240.nip.io/auth/realms/demo/protocol/openid-connect/userinfo
            - --validate-url=http://keycloak.192.168.11.240.nip.io/auth/realms/demo/protocol/openid-connect/userinfo
          envFrom:
            - secretRef:
                name: sample-proxy-secrets
          ports:
            - containerPort: 4180
              name: http
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /ping
              port: http
              scheme: HTTP
            initialDelaySeconds: 0
            timeoutSeconds: 1
          readinessProbe:
            httpGet:
              path: /ping
              port: http
              scheme: HTTP
            initialDelaySeconds: 0
            timeoutSeconds: 1
            successThreshold: 1
            periodSeconds: 10
          resources: {}
          securityContext:
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 1001
            runAsGroup: 1001
      tolerations: []
---
apiVersion: projectcontour.io/v1
kind: HTTPProxy
metadata:
  name: sample
  labels: #@ labels()
  namespace: #@ namespace()
spec:
  virtualhost:
    fqdn: #@ data.values.fqdn
  routes:
    - services:
        - name: sample
          port: 80
